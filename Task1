//implementation of operation insert and search in  binary search tree .


import java.util.*;
public class BinarySearchTree{
    static class Node{
        int data;
        Node left;
        Node right;
    
    Node(int data){
        this.data=data;
    }
    }
    public static Node insert(Node root,int val){
        if(root==null){
            root=new Node(val);
            return root;
        }
        if(root.data>val){
            root.left=insert(root.left,val);
        }
        else{
            root.right=insert(root.right,val);
        }
        return root;
    }
    public static boolean search(Node root,int key){
        if(root==null){
            return false;
        }
        if(root.data>key){
            return search(root.left,key);
        }
        else if(root.data==key){
            return true;
        }
        else{
            return search(root.right,key);
        }
    }
    public static void inorder(Node root){
        if(root==null){
            return;
        }
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    public static void main(String[] args){
        // int values[]={8,9,2,4,3,5,6};
        Scanner sc=new Scanner(System.in);
        System.out.println("please enter size :");
        int n=sc.nextInt();
        int values[]=new int[n];
        for(int i=0;i<n;i++){
           values[i]=sc.nextInt();
       }
       System.out.println("please enter key want to search:");
       int key=sc.nextInt();
       
       
        Node root=null;
        for(int i=0;i<values.length;i++){
            root=insert(root,values[i]);
        }
        inorder(root);
        System.out.println();
        if(search(root,key))
        {
            System.out.println("Found");
        }
        else{
            System.out.println("Not found");
        }
    }

    }
